<% provide(:title, "Home") %>
<div class="hero-unit">
	<h3>Crowed sourced approval system</h3>
	<br/>
	<div class="center">
		<div id="placeholder" style="width:850px; height: 400px;"></div>
		<%= link_to "Create an event", signup_path, class: "btn btn-large btn-primary" %>
	</div>
</div>

<script type="text/javascript">
$(function () {
    // we use an inline data source in the example, usually data would
    // be fetched from a server
    var data = [], totalPoints = 300;
    function getRandomData() {
        if (data.length > 0)
            data = data.slice(1);

        // do a random walk
        while (data.length < totalPoints) {
            var prev = data.length > 0 ? data[data.length - 1] : 50;
            var y = prev + Math.random() * 10 - 5;
            if (y < -100)
                y = 0;
            if (y > 100)
                y = 100;
            data.push(y);
        }

        // zip the generated y values with the x values
        var res = [];
        for (var i = 0; i < data.length; ++i)
            res.push([i, data[i]])
        return res;
    }

    // setup control widget
    var updateInterval = 80;
    $("#updateInterval").val(updateInterval).change(function () {
        var v = $(this).val();
        if (v && !isNaN(+v)) {
            updateInterval = +v;
            if (updateInterval < 1)
                updateInterval = 1;
            if (updateInterval > 2000)
                updateInterval = 2000;
            $(this).val("" + updateInterval);
        }
    });

    // setup plot
    var options = {
        series: {
        	shadowSize: 0,
        	bars: {
        		barWidth: 5,
        		align: "right",
        		horizontal: false
        	},
			lines: { 
				show: true, 
				fill: false
			},
			highlightColor: 8

        }, // drawing is faster without shadows
        yaxis: { min: -100, max: 100 },
        xaxis: {
        	mode: "time"
        },
        grid: {
        	show: true,
        	markings: [
        		{
        			yaxis: {
        				from: -1, to: 1
        			},
        			color: "red"
        		}
        	]
        }
    };
    var plot = $.plot($("#placeholder"), [ getRandomData() ], options);

    function update() {
        plot.setData([ getRandomData() ]);
        // since the axes don't change, we don't need to call plot.setupGrid()
        plot.draw();
        
        setTimeout(update, updateInterval);
    }

    update();
});
</script>
